{"id": "388", "K": 1, "temperature": 0.75, "task_id": "388", "task_description": "Write a method in Dafny to find the highest power of 2 that is less than or equal to n.", "model": "gpt-4", "response": "```dafny\n\nmethod highestPowerOf2(n:int) returns (res:int)\n    requires n > 0\n    ensures res > 0\n    ensures res <= n\n    ensures forall k :: k > 0 && k <= n && k % 2 == 0 ==> k <= res || k & (k-1) != 0 // res is the largest power of 2 <= n\n{\n    var p := 1;\n    while p*2 <= n\n        invariant p > 0\n        invariant p <= n\n        decreases n - p\n    {\n        p := p * 2;\n    }\n    res := p;\n}\n\n```", "dafny_code": "method highestPowerOf2(n:int) returns (res:int)\n    requires n > 0\n    ensures res > 0\n    ensures res <= n\n    ensures forall k :: k > 0 && k <= n && k % 2 == 0 ==> k <= res || k & (k-1) != 0 // res is the largest power of 2 <= n\n{\n    var p := 1;\n    while p*2 <= n\n        invariant p > 0\n        invariant p <= n\n        decreases n - p\n    {\n        p := p * 2;\n    }\n    res := p;\n}", "isVerified": false, "verification_bits": {"method": 1, "ensure": 3, "requires": 1, "function": 0, "lemma": 0, "predicate": 0, "invariant": 2, "assert_count": 0}}