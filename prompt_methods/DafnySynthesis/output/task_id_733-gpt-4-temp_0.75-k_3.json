{"id": "733", "K": 3, "temperature": 0.75, "task_id": "733", "task_description": "Write a method in Dafny to find the index of the first occurrence of a given number in a sorted array.", "model": "gpt-4", "response": "```dafny\n// Dafny Code\n\nmethod findFirstOccurrence(A:array<int>, x:int) returns (res:int)\n{\n    var n := A.Length;\n    var low := 0;\n    var high := n - 1;\n    res := -1;\n    while low <= high\n        decreases high - low + 1\n    {\n        var mid := low + (high - low) / 2;\n        if A[mid] == x {\n            res := mid;\n            high := mid - 1; // look for earlier occurrence\n        } else if A[mid] < x {\n            low := mid + 1;\n        } else {\n            high := mid - 1;\n        }\n    }\n}\n```\nThis method performs a standard binary search and updates `res` whenever `x` is found, but keeps searching the left half to find the first occurrence. If `x` is not present, `res` remains -1.", "dafny_code": "// Dafny Code\n\nmethod findFirstOccurrence(A:array<int>, x:int) returns (res:int)\n{\n    var n := A.Length;\n    var low := 0;\n    var high := n - 1;\n    res := -1;\n    while low <= high\n        decreases high - low + 1\n    {\n        var mid := low + (high - low) / 2;\n        if A[mid] == x {\n            res := mid;\n            high := mid - 1; // look for earlier occurrence\n        } else if A[mid] < x {\n            low := mid + 1;\n        } else {\n            high := mid - 1;\n        }\n    }\n}", "isVerified": false, "verification_bits": {"method": 1, "ensure": 0, "requires": 0, "function": 0, "lemma": 0, "predicate": 0, "invariant": 0, "assert_count": 0}}