{"id": "566", "K": 4, "temperature": 0.75, "task_id": "566", "task_description": "Write a method in Dafny to get the sum of the digits of a non-negative integer.", "model": "gpt-4", "response": "```dafny\n//Dafny Code\n\nmethod sumDigits(n:int) returns (res:int)\n    requires n >= 0\n    ensures res == sum i | 0 <= i < if n == 0 then 1 else |n.ToString()| :: (n.ToString()[i] as int - '0' as int)\n{\n    var m := n;\n    res := 0;\n    if m == 0 {\n        res := 0;\n    } else {\n        while m > 0\n            invariant m >= 0\n            invariant res >= 0\n            decreases m\n        {\n            res := res + m % 10;\n            m := m / 10;\n        }\n    }\n}\n```", "dafny_code": "//Dafny Code\n\nmethod sumDigits(n:int) returns (res:int)\n    requires n >= 0\n    ensures res == sum i | 0 <= i < if n == 0 then 1 else |n.ToString()| :: (n.ToString()[i] as int - '0' as int)\n{\n    var m := n;\n    res := 0;\n    if m == 0 {\n        res := 0;\n    } else {\n        while m > 0\n            invariant m >= 0\n            invariant res >= 0\n            decreases m\n        {\n            res := res + m % 10;\n            m := m / 10;\n        }\n    }\n}", "isVerified": false, "verification_bits": {"method": 1, "ensure": 1, "requires": 1, "function": 0, "lemma": 0, "predicate": 0, "invariant": 2, "assert_count": 0}}