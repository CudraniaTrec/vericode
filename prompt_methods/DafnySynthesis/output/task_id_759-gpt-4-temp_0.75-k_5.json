{"id": "759", "K": 5, "temperature": 0.75, "task_id": "759", "task_description": "Write a method in Dafny to check whether a given string is a decimal number with a precision of 2.", "model": "gpt-4", "response": "```dafny\nmethod IsDecimalWithTwoPrecision(s: string) returns (result: bool)\n{\n    // The pattern is: optional digits, then optional '.', then exactly two digits\n    // Valid examples: \"12.34\", \"0.12\", \".12\", \"123456.00\"\n    // Invalid examples: \"12.3\", \"12.\", \"12.345\", \"abc\", \"12\"\n\n    if |s| < 4 {\n        // Minimum: \".12\" (length 3), but also \"0.12\" (length 4)\n        if |s| == 3 && s[0] == '.' && ('0' <= s[1] <= '9') && ('0' <= s[2] <= '9') {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    var i := 0;\n    // Optional leading digits\n    while i < |s| && '0' <= s[i] <= '9'\n        decreases |s| - i\n    {\n        i := i + 1;\n    }\n    // Now expect a '.'\n    if i >= |s| || s[i] != '.' {\n        return false;\n    }\n    i := i + 1;\n    // Need exactly two digits after the dot\n    if i + 1 >= |s| {\n        return false;\n    }\n    if !('0' <= s[i] <= '9') || !('0' <= s[i+1] <= '9') {\n        return false;\n    }\n    i := i + 2;\n    // No extra characters allowed\n    if i != |s| {\n        return false;\n    }\n    return true;\n}\n```", "dafny_code": "method IsDecimalWithTwoPrecision(s: string) returns (result: bool)\n{\n    // The pattern is: optional digits, then optional '.', then exactly two digits\n    // Valid examples: \"12.34\", \"0.12\", \".12\", \"123456.00\"\n    // Invalid examples: \"12.3\", \"12.\", \"12.345\", \"abc\", \"12\"\n\n    if |s| < 4 {\n        // Minimum: \".12\" (length 3), but also \"0.12\" (length 4)\n        if |s| == 3 && s[0] == '.' && ('0' <= s[1] <= '9') && ('0' <= s[2] <= '9') {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    var i := 0;\n    // Optional leading digits\n    while i < |s| && '0' <= s[i] <= '9'\n        decreases |s| - i\n    {\n        i := i + 1;\n    }\n    // Now expect a '.'\n    if i >= |s| || s[i] != '.' {\n        return false;\n    }\n    i := i + 1;\n    // Need exactly two digits after the dot\n    if i + 1 >= |s| {\n        return false;\n    }\n    if !('0' <= s[i] <= '9') || !('0' <= s[i+1] <= '9') {\n        return false;\n    }\n    i := i + 2;\n    // No extra characters allowed\n    if i != |s| {\n        return false;\n    }\n    return true;\n}", "isVerified": true, "verification_bits": {"method": 1, "ensure": 0, "requires": 0, "function": 0, "lemma": 0, "predicate": 0, "invariant": 0, "assert_count": 0}}